!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(e.WaltClosures={})}(this,function(e){"use strict";function n(e){return e[e.length-1]}function t(e){return e[0]}function r(){const{Syntax:e}=this,{drop:n,extendNode:r}=this.helpers,{node:o,typeGeneric:i}=this.nodes(this.lexer);return{Lexer:void 0,ParserRules:[{name:"TypeDef",symbols:["TYPE","__","Identifier","_","EQUALS","_","GenericType","_","SEPARATOR"],postprocess:t=>{const[i,a,s]=n(t);return r({value:i.value,params:[a,s]},o(e.GenericType)([]))}},{name:"GenericType",symbols:["Identifier","LT","_","Type","_","GT"],postprocess:i},{name:"Closure",symbols:["FunctionParameters","_","FATARROW","_","Block"],postprocess:t=>{const[i,a]=n(t);const s=r({type:null},o(e.FunctionResult)([]));return r({params:[r({params:[i,s,a]},o(e.FunctionDeclaration)([]))]},o(e.Closure)([]))}},{name:"Closure",symbols:["FunctionParameters","_","FunctionResult","_","FATARROW","_","Block"],postprocess:t=>{const[i,a,s]=n(t);return r({params:[r({params:[i,a,s]},o(e.FunctionDeclaration)([]))]},o(e.Closure)([]))}},{name:"Expression",symbols:["Closure"],postprocess:t}],ParserStart:"TypeDef"}}"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var o=function(e,n){return n={exports:{}},e(n,n.exports),n.exports}(function(e,n){!function(e,t){t(n)}(0,function(e){const n={i32:"i32",f32:"f32",i64:"i64",f64:"f64",Memory:"Memory",Table:"Table",bool:"bool"},t={Program:"Program",Export:"Export",Import:"Import",IfThenElse:"IfThenElse",Else:"Else",Declaration:"Declaration",ImmutableDeclaration:"ImmutableDeclaration",FunctionDeclaration:"FunctionDeclaration",ArrayDeclaration:"ArrayDeclaration",Loop:"Loop",MemoryAssignment:"MemoryAssignment",Assignment:"Assignment",Typedef:"Typedef",Struct:"Struct",ReturnStatement:"ReturnStatement",Sequence:"Sequence",ObjectLiteral:"ObjectLiteral",Pair:"Pair",Break:"Break",Comment:"Comment",Sizeof:"Sizeof",Spread:"Spread",Noop:"Noop",Block:"Block"};var r={Program:"Program",Keyword:"Keyword",Export:"Export",Import:"Import",Statement:"Statement",IfThenElse:"IfThenElse",Select:"Select",Else:"Else",UnaryExpression:"UnaryExpression",BinaryExpression:"BinaryExpression",TernaryExpression:"TernaryExpression",NumberLiteral:"NumberLiteral",StringLiteral:"StringLiteral",CharacterLiteral:"CharacterLiteral",Punctuator:"Punctuator",Identifier:"Identifier",ArraySubscript:"ArraySubscript",Constant:"Constant",Type:"Type",GenericType:"GenericType",UserType:"UserType",FunctionType:"FunctionType",Declaration:"Declaration",ImmutableDeclaration:"ImmutableDeclaration",FunctionDeclaration:"FunctionDeclaration",ArrayDeclaration:"ArrayDeclaration",IndirectFunctionCall:"IndirectFunctionCall",FunctionCall:"FunctionCall",Loop:"Loop",MemoryAssignment:"MemoryAssignment",Assignment:"Assignment",Param:"Param",Typedef:"Typedef",Struct:"Struct",ReturnStatement:"ReturnStatement",Sequence:"Sequence",ObjectLiteral:"ObjectLiteral",Pair:"Pair",TypeCast:"TypeCast",Break:"Break",Comment:"Comment",Sizeof:"Sizeof",Spread:"Spread",Closure:"Closure",Noop:"Noop",ClosureType:"ClosureType",Block:"Block",ObjectField:"ObjectField",FunctionIndex:"FunctionIndex",FunctionIdentifier:"FunctionIdentifier",FunctionPointer:"FunctionPointer",FunctionArguments:"FunctionArguments",FunctionResult:"FunctionResult",FunctionLocals:"FunctionLocals",NativeMethod:"NativeMethod"};e.Program="Program",e.Keyword="Keyword",e.Export="Export",e.Import="Import",e.Statement="Statement",e.IfThenElse="IfThenElse",e.Select="Select",e.Else="Else",e.UnaryExpression="UnaryExpression",e.BinaryExpression="BinaryExpression",e.TernaryExpression="TernaryExpression",e.NumberLiteral="NumberLiteral",e.StringLiteral="StringLiteral",e.CharacterLiteral="CharacterLiteral",e.Punctuator="Punctuator",e.Identifier="Identifier",e.ArraySubscript="ArraySubscript",e.Constant="Constant",e.Type="Type",e.GenericType="GenericType",e.UserType="UserType",e.FunctionType="FunctionType",e.Declaration="Declaration",e.ImmutableDeclaration="ImmutableDeclaration",e.FunctionDeclaration="FunctionDeclaration",e.ArrayDeclaration="ArrayDeclaration",e.IndirectFunctionCall="IndirectFunctionCall",e.FunctionCall="FunctionCall",e.Loop="Loop",e.MemoryAssignment="MemoryAssignment",e.Assignment="Assignment",e.Param="Param",e.Typedef="Typedef",e.Struct="Struct",e.ReturnStatement="ReturnStatement",e.Sequence="Sequence",e.ObjectLiteral="ObjectLiteral",e.Pair="Pair",e.TypeCast="TypeCast",e.Break="Break",e.Comment="Comment",e.Sizeof="Sizeof",e.Spread="Spread",e.Closure="Closure",e.Noop="Noop",e.ClosureType="ClosureType",e.Block="Block",e.ObjectField="ObjectField",e.FunctionIndex="FunctionIndex",e.FunctionIdentifier="FunctionIdentifier",e.FunctionPointer="FunctionPointer",e.FunctionArguments="FunctionArguments",e.FunctionResult="FunctionResult",e.FunctionLocals="FunctionLocals",e.NativeMethod="NativeMethod",e.i32="i32",e.f32="f32",e.i64="i64",e.f64="f64",e.Memory="Memory",e.Table="Table",e.bool="bool",e.builtinTypes=n,e.statements=t,e.default=r,Object.defineProperty(e,"__esModule",{value:!0})})}),i=function(e){return e&&e.__esModule?e.default:e}(o);o.tokens,o.semantics,o.builtinTypes,o.statements,o.i32,o.f32,o.i64,o.f64;const a=Symbol("scope namespace"),s=Symbol("signature");var c={enter:function(e,n){return[...e,{[a]:n,[s]:{result:null,arguments:null}}]},exit:function(e){return e.slice(0,-1)},add:function(e,t,r){const o=n(e);return o&&(o[t]=r),o},find:function(e,n){let t=e.length-1;for(t;t>=0;t--){const r=e[t][n];if(r)return r}return null},current:n,index:function(e,n){const t=Object.keys(e).indexOf(n);return t>-1?t:Object.keys(e).length},namespace:a,signature:s};const{enter:u,exit:l,add:p,find:m,current:f,namespace:y,signature:d,index:v}=c;var _={enter:u,exit:l,add:p,find:m,current:f,namespace:y,index:v,signature:d},T=_.enter,S=_.current,F=_.find,C=function(e,n){const t=n=>n&&n.Type===e,r=e=>{if(null==e)return!1;return t(e)||e.params.some(r)};return r(n)},E=function(e){const n=t=>{if(null==t)return t;const{params:r}=t;const o=(()=>{if("*"in e&&"function"==typeof e["*"])return e["*"];if(t.Type in e&&"function"==typeof e[t.Type])return e[t.Type];return()=>t})();if(2===o.length)return o(t,n),t;o(t);r.forEach(n);return t};return n},b="const memory: Memory = { initial: 1 };\nlet heapPointer: i32 = 0;\nexport function __closure_malloc(size: i32): i32 {\n  const ptr: i32 = heapPointer;\n  heapPointer += size;\n  return ptr;\n}\n\nexport function __closure_free(ptr: i32) {\n}\n\n// Getters\nexport function __closure_get_i32(ptr: i32): i32 {\n  const view: i32[] = ptr;\n  return view[0];\n}\n\nexport function __closure_get_f32(ptr: i32): f32 {\n  const view: f32[] = ptr;\n  return view[0];\n}\n\nexport function __closure_get_i64(ptr: i32): i64 {\n  const view: i64[] = ptr;\n  return view[0];\n}\n\nexport function __closure_get_f64(ptr: i32): f64 {\n  const view: f64[] = ptr;\n  return view[0];\n}\n\n// Setters\nexport function __closure_set_i32(ptr: i32, value: i32) {\n  const view: i32[] = ptr;\n  view[0] = value;\n}\n\nexport function __closure_set_f32(ptr: i32, value: f32) {\n  const view: f32[] = ptr;\n  view[0] = value;\n}\n\nexport function __closure_set_i64(ptr: i32, value: i64) {\n  const view: i64[] = ptr;\n  view[0] = value;\n}\n\nexport function __closure_set_f64(ptr: i32, value: f64) {\n  const view: f64[] = ptr;\n  view[0] = value;\n}\n",g=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e};const x="walt-plugin-closure",P={i64:8,f64:8,i32:4,f32:4},I=(e,n)=>e+n,A="local/index",L=`\n// Start Closure Imports Header\nimport {\n  __closure_malloc: ClosureGeti32,\n  __closure_free: ClosureFree,\n  __closure_get_i32: ClosureGeti32,\n  __closure_get_f32: ClosureGetf32,\n  __closure_get_i64: ClosureGeti64,\n  __closure_get_f64: ClosureGetf64,\n  __closure_set_i32: ClosureSeti32,\n  __closure_set_f32: ClosureSetf32,\n  __closure_set_i64: ClosureSeti64,\n  __closure_set_f64: ClosureSetf64\n} from '${x}';\ntype ClosureFree = (i32) => void;\ntype ClosureGeti32 = (i32) => i32;\ntype ClosureGetf32 = (i32) => f32;\ntype ClosureGeti64 = (i32) => i64;\ntype ClosureGetf64 = (i32) => f64; type ClosureSeti32 = (i32, i32) => void;\ntype ClosureSetf32 = (i32, f32) => void;\ntype ClosureSeti64 = (i32, i64) => void;\ntype ClosureSetf64 = (i32, f64) => void;\n// End Closure Imports Header\n`;e.DEPENDENCY_NAME=x,e.imports=function(e,n){return WebAssembly.instantiate(n(b,e).buffer()).then(e=>({[x]:e.instance.exports}))},e.plugin=function(){return{grammar:r,semantics:({parser:e,fragment:n})=>{const t=e=>(t,r)=>{const[o,a]=t;const{environment:s,types:c}=a;if(!a.isParsingClosure||!s[o.value])return e(c[o.type]&&c[o.type].meta.CLOSURE_TYPE?[g({},o,{type:"i64",meta:g({},o.meta,{CLOSURE_INSTANCE:!0,ALIAS:o.type})}),a]:t);const u=e(t);s[u.value]=g({},u,{meta:g({},u.meta,{ENV_OFFSET:Object.values(a.envSize).reduce(I,0)})});a.envSize[u.value]=P[u.type]||4;if(!u.params.length)return g({},u,{Type:i.Noop});const[l]=u.params;const p=s[u.value];const m=n(`__closure_set_${p.type}(__env_ptr + ${p.meta.ENV_OFFSET})`);return r([g({},m,{params:[...m.params,l]}),a])};return{GenericType:e=>e=>{const[n,t]=e;const{types:r}=t;const[o]=n.params;const[a]=o.params;const s=r[a.value];const[c,u]=s.params;const l=g({},s,{range:o.range,value:n.value,meta:g({},s.meta,{CLOSURE_TYPE:"Lambda"===o.value}),params:[g({},c,{params:[g({},c,{params:[],type:"i32",value:"i32",Type:i.Type}),...c.params]}),u]});r[l.value]=l;return l},Program:n=>t=>{const[r,o]=t;if(!C(i.Closure,r))return n(t);const a=e(L).params;const s=[];const c=n([g({},r,{params:[...a,...r.params]}),g({},o,{closures:s})]);const u=g({},c,{params:[...c.params,...s]});return u},Closure:e=>(e,t)=>{const[r,o]=e;const[i]=r.params;const[a,s,...c]=i.params;const u=t([g({},i,{value:`__closure_${o.isParsingClosure}_0`,params:[g({},a,{params:[n("(__env_ptr : i32)"),...a.params]}),s,...c]}),o]);o.closures.push(u);return t([n(`(${u.value} | ((__env_ptr : i64) << 32))`),o])},FunctionDeclaration:e=>(t,r)=>{const[o,a]=t;const s=a.scopes[0];if(a.isParsingClosure||!C(i.Closure,o))return e(t);const c={};const u={};E({Closure(e,n){const t={__env_ptr:!0};E({FunctionArguments(e,n){E({Pair(e){const[n]=e.params;t[n.value]=n}})(e)},Declaration(e,n){t[e.value]=e},Identifier(e){t[e.value]||s[e.value]||(c[e.value]=e)}})(e)}})(o);const l=n("const __env_ptr : i32 = 0");const[p,m,f]=o.params;const y=g({},a,{environment:c,envSize:u,isParsingClosure:o.value});const d=e([g({},o,{params:[p,m,g({},f,{params:[l,...f.params]})]}),y]);d.params=d.params.map(e=>{if(e.Type===i.Declaration&&"__env_ptr"===e.value){const e=Object.values(u).reduce(I,0);return r([n(`const __env_ptr : i32 = __closure_malloc(${e})`),g({},a,{scopes:T(a.scopes,A)})])}return e});return d},Declaration:t,ImmutableDeclaration:t,FunctionResult:e=>n=>{const[t,r]=n;const{types:o}=r;if(o[t.type]&&o[t.type].meta.CLOSURE_TYPE)return e([g({},t,{type:"i64",value:"i64",meta:g({},t.meta,{ALIAS:t.type})}),r]);return e(n)},Assignment:e=>(t,r)=>{const[o,i]=t;const{scopes:a,environment:s}=i;const[c,u]=o.params;if(!i.isParsingClosure)return e(t);if(S(a)[c.value])return e(t);const{type:l,meta:{ENV_OFFSET:p}}=s[c.value];const m=n(`__closure_set_${l}(__env_ptr + ${p})`);return r([g({},m,{params:[...m.params,u]}),i])},Identifier:e=>(t,r)=>{const[o,i]=t;const{environment:a}=i;if(!i.isParsingClosure||!a[o.value])return e(t);const{type:s,meta:{ENV_OFFSET:c}}=a[o.value];return r([n(`__closure_get_${s}(__env_ptr + ${c})`),i])},FunctionCall:e=>(t,r)=>{const[o,a]=t;const{scopes:s,types:c}=a;const u=F(s,o.value);if(u&&u.meta.CLOSURE_INSTANCE){const e=[n(`((${u.value} >> 32) : i32)`),...o.params.slice(1),n(`(${u.value} : i32)`)].map(e=>r([e,a])),t=c[u.meta.ALIAS],s=Object.keys(c).indexOf(t.value),l=g({},o,{meta:g({},u.meta,o.meta,{TYPE_INDEX:s}),type:null!=t?t.type:o.type,params:e,Type:i.IndirectFunctionCall});return l}return e(t)}}}}},Object.defineProperty(e,"__esModule",{value:!0})});
